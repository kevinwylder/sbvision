package interpolate_test

import (
	"encoding/json"
	"fmt"
	"testing"

	"github.com/kevinwylder/sbvision"
	"github.com/kevinwylder/sbvision/video/interpolate"
)

func TestLinear(test *testing.T) {

	f := interpolate.Linear(&testClip)

	for i := 0; i < 500; i++ {
		p := f.At(float64(i) * f.Duration() / 500.)
		data, _ := json.Marshal(&p)
		_ = data
		//fmt.Print(string(data) + " ")
	}
	//test.Fail()
}

func TestReflections(test *testing.T) {
	for i := testClip.Start; i <= testClip.End; i++ {
		for _, q := range interpolate.ReflectionsOf(testClip.Rotations[i]) {
			data, _ := json.Marshal(&q)
			fmt.Print(string(data) + " ")
		}
	}
	test.Fail()
}

var testClip = sbvision.Clip{
	Start:     13,
	End:       33,
	Rotations: map[int64]sbvision.Quaternion{13: {0.4726823598206945, 0.4138623201130969, -0.5128878958306092, 0.5850088657579493}, 14: {0.6451507050131529, 0.5114377340619504, 0.33093164236351313, -0.4611900476823055}, 15: {0.6994918012506526, 0.43867271961009885, 0.28697179388760413, -0.48572075780837193}, 16: {0.7543938745022332, 0.4037836906837435, 0.08980994763967869, -0.5096889115492838}, 17: {0.573449331250058, 0.6405527192765024, -0.3074714276469278, -0.4078104945892294}, 18: {0.3015141804293607, 0.8078385497995159, -0.4849979658551476, -0.14581855017182105}, 19: {-0.062349715155124906, 0.8380514500723428, -0.4591340695555128, 0.2880593449710222}, 20: {-0.3629962715787807, 0.6678658746737819, -0.244849479662033, 0.601861788598835}, 21: {-0.46479067278789576, 0.4778922832824934, 0.16898005411787279, 0.7259713061676584}, 22: {-0.5269197209990911, 0.1800914521830023, 0.6766137499544269, 0.4817847131712602}, 23: {-0.4852028875867736, 0.08652159173740083, 0.867944818070428, 0.06135115993553094}, 24: {-0.35884340885720334, 0.01869063522089847, 0.8227923241002175, -0.4403349401042467}, 25: {-0.34125449397840074, 0.034471514009015006, 0.4623461899787254, -0.8176754158428017}, 26: {-0.32516322532854536, 0.03178869977397428, -0.08242776003557523, -0.941522182338903}, 27: {-0.3690207417251544, -0.06696260979174512, -0.48722041125870547, -0.7886418527566703}, 28: {-0.3853342220096793, -0.05600516562707987, -0.8488477143575052, -0.3575451252658979}, 29: {-0.5051079197038417, -0.1561694547673656, -0.8400002711313649, 0.12196981327136398}, 30: {-0.5146012305349299, -0.3426731569067424, -0.5672174338253795, 0.54408185398169}, 31: {-0.5562574832056986, -0.45365881987869855, -0.42498382636979526, 0.5515070578407111}, 32: {-0.5267048200485429, -0.5202096999528752, -0.4542963513017263, 0.49555900335541814}, 33: {-0.5166889632608664, -0.5110203401712224, -0.46460899546006434, 0.5059932890003525}},
}
